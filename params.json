{"name":"Chason","tagline":"Fast lightweight JSON serializer for .NET","body":"Chason\r\n======\r\n\r\nOn a project I was working on, we noticed 30% of all our code execution was spent either serializing or deserializing JSON.\r\nClearly there was room for improvement. The goal of Chason (pronounced 'chase on') is to see if I can catch and even beat \r\nthe best of the best JSON serializers out there.\r\n\r\nGoals for the project are:\r\n- Fast! (as fast as .NET will let us go)\r\n- Easily customizable type output with pluggable formatters (including support for your own value types converted to and from JSON)\r\n- Full polymorphic support with internal type to external name mapping.\r\n- Optimize for strongly typed data contracts with an explicitly specified member order (to improve perf even more)\r\n- Portable Library support (initially only .NET 4.5 and WinRT)\r\n\r\nInitial Performance Results \r\n---------------------------\r\n|Test|Iterations|Time (ms)|Objects / sec|\r\n|:---|---------:|--------:|------------:|\r\n|SerializeChason|1,000,000|2,904|344,270.2|\r\n|SerializeServiceStack|1,000,000|3,186|313,813.0|\r\n|SerializeJsonNet|1,000,000|5,756|173,708.6|\r\n|SerializeFastJson|10,000|13,137|76,115.6|\r\n|SerializeDataContractJson|1,000,000|5,961|167,747.2|\r\n|DeserializeChason|1,000,000|2,827|353,664.2|\r\n|DeserializeServiceStack|1,000,000|3,981|251,167.1|\r\n|DeserializeJsonNet|1,000,000|10,835|92,289.5|\r\n|DeserializeFastJson|1,000,000|3,245|308,082.7|\r\n|DeserializeDataContractJson|1,000,000|16,214|61,675.1|\r\n\r\nNote\r\n----\r\n- Tests are run with a thread-affinity set to a single core.\r\n- Chason is unfinished and different test scenarios would probably fail.\r\n- fastJSON serialization is quite fast in small iterations but became exponentially slow at 1,000,000 iterations so the iteration count was reduced to 10,000.\r\n- Test is a single instance of a simple object being serialized / deserialized against common implementations\r\n- Tests were run on a Core i7 2.66GHz MacBook Pro with 4G RAM and an SSD, on Windows 8 64bit. (Experience Index 5.9)\r\n\r\n\r\nSome of the code is based on a heavily modified version of fastJSON for deserialization.\r\n\r\n- http://fastjson.codeplex.com/ - For fastJSON's code.\r\n- http://www.codeproject.com/KB/IP/fastJSON.aspx - Article outlining how fastJSON works.\r\n\r\nThe license for this is MIT.\r\n\r\nThe chase is on!\r\n\r\nAndrew Chisholm","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}